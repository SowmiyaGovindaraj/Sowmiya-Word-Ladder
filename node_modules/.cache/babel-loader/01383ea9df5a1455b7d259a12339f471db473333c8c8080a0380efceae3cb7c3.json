{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abida\\\\OneDrive\\\\Documents\\\\React\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n//import { findLadder } from 'word-ladder-js';\nimport './App.css'; // Import the custom WordLadder.css file\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordLadder = () => {\n  _s();\n  const [startWord, setStartWord] = useState('');\n  const [endWord, setEndWord] = useState('');\n  const [wordLadder, setWordLadder] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [validationError, setValidationError] = useState(false);\n  const handleStartWordChange = e => {\n    setStartWord(e.target.value);\n    setValidationError(false); // Clear validation error when input changes\n  };\n\n  const handleEndWordChange = e => {\n    setEndWord(e.target.value);\n    setValidationError(false); // Clear validation error when input changes\n  };\n\n  const handleFindWordLadder = () => {\n    // Function to check if two words differ by only one character\n    if (startWord.trim() === '' || endWord.trim() === '') {\n      setValidationError(true);\n      return;\n    }\n    const isAdjacent = (word1, word2) => {\n      let diffCount = 0;\n      for (let i = 0; i < word1.length; i++) {\n        if (word1[i] !== word2[i]) {\n          diffCount++;\n          if (diffCount > 1) return false;\n        }\n      }\n      return diffCount === 1;\n    };\n\n    // Breadth-First Search to find the word ladder\n    const bfs = (start, end, wordList) => {\n      const visited = new Set();\n      const queue = [];\n      queue.push([start]);\n      while (queue.length > 0) {\n        const currentPath = queue.shift();\n        const lastWord = currentPath[currentPath.length - 1];\n        if (lastWord === end) {\n          return currentPath;\n        }\n        for (const word of wordList) {\n          if (!visited.has(word) && isAdjacent(lastWord, word)) {\n            visited.add(word);\n            queue.push([...currentPath, word]);\n          }\n        }\n      }\n      return []; // Empty array means no word ladder found\n    };\n\n    // Sample word list (replace this with your actual word list)\n    const wordList = ['hot', 'dot', 'dog', 'lot', 'log', 'cog'];\n    const ladder = bfs(startWord, endWord, wordList);\n    if (ladder.length === 0) {\n      alert('Word ladder not found!');\n    } else {\n      setWordLadder(ladder);\n      setShowResult('visible');\n    }\n    setValidationError(false);\n  };\n\n  // const isButtonDisabled = startWord.trim() === '' || endWord.trim() === '';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-ladder-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Word Ladder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: startWord,\n            onChange: handleStartWordChange,\n            className: `form-control mb-2 ${validationError && startWord.trim() === '' ? 'border border-danger' : ''}`,\n            placeholder: \"Enter start word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `col-md-4 ${showResult ? 'visible' : 'invisible'}`,\n            children: wordLadder.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-container mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scrollable-list\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-unstyled text-center\",\n                  children: wordLadder.map((word, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"animate__animated animate__fadeInUp\",\n                    children: word\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: endWord,\n            onChange: handleEndWordChange,\n            className: `form-control mb-2 ${validationError && endWord.trim() === '' ? 'border border-danger' : ''}`,\n            placeholder: \"Enter end word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFindWordLadder,\n            className: \"btn btn-primary animate__animated animate__heartBeat\"\n            //disabled={isButtonDisabled}\n            ,\n            children: \"Find Word Ladder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(WordLadder, \"B9KHUzLc1JVklIi1Ug33aniRVU0=\");\n_c = WordLadder;\nexport default WordLadder;\nvar _c;\n$RefreshReg$(_c, \"WordLadder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WordLadder","_s","startWord","setStartWord","endWord","setEndWord","wordLadder","setWordLadder","showResult","setShowResult","validationError","setValidationError","handleStartWordChange","e","target","value","handleEndWordChange","handleFindWordLadder","trim","isAdjacent","word1","word2","diffCount","i","length","bfs","start","end","wordList","visited","Set","queue","push","currentPath","shift","lastWord","word","has","add","ladder","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abida/OneDrive/Documents/React/my-react-app/src/App.js"],"sourcesContent":["\n\nimport React, { useState } from 'react';\n//import { findLadder } from 'word-ladder-js';\nimport './App.css'; // Import the custom WordLadder.css file\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\nconst WordLadder = () => {\n  const [startWord, setStartWord] = useState('');\n  const [endWord, setEndWord] = useState('');\n  const [wordLadder, setWordLadder] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [validationError, setValidationError] = useState(false);\n\n  const handleStartWordChange = (e) => {\n    setStartWord(e.target.value);\n    setValidationError(false); // Clear validation error when input changes\n  };\n\n  const handleEndWordChange = (e) => {\n    setEndWord(e.target.value);\n    setValidationError(false); // Clear validation error when input changes\n  };\n\n  const handleFindWordLadder = () => {\n    // Function to check if two words differ by only one character\n    if (startWord.trim() === '' || endWord.trim() === '') {\n      setValidationError(true);\n      return;\n    }\n    const isAdjacent = (word1, word2) => {\n      let diffCount = 0;\n      for (let i = 0; i < word1.length; i++) {\n        if (word1[i] !== word2[i]) {\n          diffCount++;\n          if (diffCount > 1) return false;\n        }\n      }\n      return diffCount === 1;\n    };\n\n    // Breadth-First Search to find the word ladder\n    const bfs = (start, end, wordList) => {\n      const visited = new Set();\n      const queue = [];\n      queue.push([start]);\n\n      while (queue.length > 0) {\n        const currentPath = queue.shift();\n        const lastWord = currentPath[currentPath.length - 1];\n\n        if (lastWord === end) {\n          return currentPath;\n        }\n\n        for (const word of wordList) {\n          if (!visited.has(word) && isAdjacent(lastWord, word)) {\n            visited.add(word);\n            queue.push([...currentPath, word]);\n          }\n        }\n      }\n\n      return []; // Empty array means no word ladder found\n    };\n\n    // Sample word list (replace this with your actual word list)\n    const wordList = ['hot', 'dot', 'dog', 'lot', 'log', 'cog'];\n\n    const ladder = bfs(startWord, endWord, wordList);\n    if (ladder.length === 0) {\n      alert('Word ladder not found!');\n    } else {\n      setWordLadder(ladder);\n      setShowResult('visible');\n    }\n\n    setValidationError(false);\n  };\n\n // const isButtonDisabled = startWord.trim() === '' || endWord.trim() === '';\n\n  return (\n    <div className=\"word-ladder-container\">\n      <h1 className=\"text-center\">Word Ladder</h1>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-4\">\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              value={startWord}\n              onChange={handleStartWordChange}\n              className={`form-control mb-2 ${validationError && startWord.trim() === '' ? 'border border-danger' : ''}`}\n              placeholder=\"Enter start word\"\n            />\n            <div className={`col-md-4 ${showResult ? 'visible' : 'invisible'}`}>\n              {wordLadder.length > 0 && (\n                <div className=\"result-container mt-4\">\n                  <div className=\"scrollable-list\">\n                    <ul className=\"list-unstyled text-center\">\n                      {wordLadder.map((word, index) => (\n                        <li key={index} className=\"animate__animated animate__fadeInUp\">\n                          {word}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              )}\n            </div>\n            <input\n              type=\"text\"\n              value={endWord}\n              onChange={handleEndWordChange}\n              className={`form-control mb-2 ${validationError && endWord.trim() === '' ? 'border border-danger' : ''}`}\n              placeholder=\"Enter end word\"\n            />\n            <button\n              onClick={handleFindWordLadder}\n              className=\"btn btn-primary animate__animated animate__heartBeat\"\n              //disabled={isButtonDisabled}\n            >\n              Find Word Ladder\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WordLadder;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}